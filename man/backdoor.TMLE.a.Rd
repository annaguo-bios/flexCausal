% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backdoor-TMLE-a.R
\name{backdoor.TMLE.a}
\alias{backdoor.TMLE.a}
\title{Estimate average counterfactual outcome E(Y(a)).}
\usage{
backdoor.TMLE.a(
  a = NULL,
  data = NULL,
  vertices = NULL,
  di_edges = NULL,
  bi_edges = NULL,
  treatment = NULL,
  outcome = NULL,
  multivariate.variables = NULL,
  graph = NULL,
  superlearner.Y = F,
  superlearner.A = F,
  crossfit = F,
  K = 5,
  lib.Y = c("SL.glm", "SL.earth", "SL.ranger", "SL.mean"),
  lib.A = c("SL.glm", "SL.earth", "SL.ranger", "SL.mean"),
  formulaY = "Y ~ .",
  formulaA = "A ~ .",
  linkY_binary = "logit",
  linkA = "logit",
  truncate_lower = 0,
  truncate_upper = 1
)
}
\arguments{
\item{a}{Treatment level or a length two vector specifying treatment levels.
The average counterfactual outcome(s) will be computed at the specified treatment level(s).
If \code{a} is a single value, the function will return \code{E(Y(a))}, which is the
average counterfactual outcome under the treatment level specified by \code{a}.
If \code{a} is a vector of length two, say \code{c(value1, value2)}, the function will return
\code{E(Y(a=value1)) - E(Y(a=value2))}, which is the contrast between the average
counterfactual outcomes under the two specified treatment levels.}

\item{data}{A Dataframe contains all the variables listed in vertices parameter}

\item{vertices}{A vector of variable names in the causal graph}

\item{di_edges}{A list of directed edges in the causal graph. For example, \code{di_edges=list(c('A','B'))} means there is a directed edge from vertex A to B.}

\item{bi_edges}{A list of bidirected edges in the causal graph. For example, \code{bi_edges=list(c('A','B'))} means there is a bidirected edge between vertex A and B.}

\item{treatment}{A character string indicating the treatment variable}

\item{outcome}{A character string indicating the outcome variable}

\item{multivariate.variables}{A list of variables that are multivariate in the causal graph. For example, \verb{multivariate.variables=list(M=c('M1,'M2'))} means M is bivariate and the corresponding columns in the dataframe are M1 and M2.}

\item{graph}{A graph object generated by the \code{make.graph()} function. User only need to specify either \code{graph} or \code{vertices}, \code{di_edges}, \code{bi_edges}, and \code{multivariate.variables}.}

\item{superlearner.Y}{A logical indicator determines whether SuperLearner via the \link[SuperLearner]{SuperLearner} function is adopted for estimating the outcome regression.}

\item{superlearner.A}{A logical indicator determines whether SuperLearner via the \link[SuperLearner]{SuperLearner} function is adopted for estimating the propensity score.}

\item{crossfit}{A logical indicator determines whether crossfitting is adopted for SuperLearner. If crossfit is set to TRUE, the data is split into K folds as specified by the \code{K} parameter.}

\item{K}{An integer specifying the number of folds for crossfitting.}

\item{lib.Y}{A character vector specifying the library of algorithms to be used in the SuperLearner for outcome regression.}

\item{lib.A}{A character vector specifying the library of algorithms to be used in the SuperLearner for propensity score estimation.}

\item{formulaY}{Regression formula for the outcome regression of Y on it's Markov pillow. The default is 'Y ~ .'.}

\item{formulaA}{Regression formula for the propensity score regression of A on it's Markov pillow. The default is 'A ~ .'.}

\item{linkY_binary}{The link function used for outcome regression of Y on it's Markov pillow when Y is binary and superlearner is not sued. The default is the 'logit' link.}

\item{linkA}{The link function used for propensity score regression of A on it's Markov pillow if superlearner is not used. The default is the 'logit' link.}

\item{truncate_lower}{The lower bound for truncation of the propensity score. The default is 0, which means no truncation.}

\item{truncate_upper}{The upper bound for truncation of the propensity score. The default is 1, which means no truncation.}
}
\value{
Function outputs a list containing TMLE results and onestep results:
\describe{
\item{\code{estimated_psi}}{The estimated parameter of interest: \eqn{E(Y^a)}}
\item{\code{lower.ci}}{Lower bound of the 95\% confidence interval for \code{estimated_psi}}
\item{\code{upper.ci}}{Upper bound of the 95 pct confidence interval for \code{estimated_psi}}
\item{\code{EIF}}{The estimated efficient influence function evaluated at the observed data}
\item{\code{p.a.mpA}}{The estimated propensity score at treatment level \eqn{A=a} given the Markov pillow of A}
\item{\code{mu.Y_a0}}{Estimated \eqn{E[Y|a,mp(A)]} for v that comes right after A in topological order}}
}
\description{
Function for estimating the average counterfactual outcome E(Y(a)) via backdoor adjustment. The adjustment set is the Markov pillow of the treatment variable A.
}
\examples{
# E(Y(1)) estimation.
backdoor.TMLE.a(a=1,data=data_backdoor, vertices=c('A','Y','X'),
bi_edges=list(c('A','Y')), di_edges=list(c('X','A'), c('X','Y'), c('A','Y')),
treatment='A', outcome='Y')
}
