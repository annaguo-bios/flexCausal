devtools::install()
library(ADMGtmle)
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
library(ADMGtmle)
devtools::document()
devtools::install()
library(ADMGtmle)
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "bayes",
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
# fig a
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
?f.markov_pillow
.rs.restartR()
devtools::install()
devtools::check()
.rs.restartR()
devtools::check()
devtools::install()
.rs.restartR()
library(ADMGtmle)
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
.rs.restartR()
devtools::install()
.rs.restartR()
library(ADMGtmle)
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
# fig a
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
devtools::install()
.rs.restartR()
library(ADMGtmle)
# fig a
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
tmp <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
# fig a
tmp.bayes <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp.dnorm <- ADMGtmle(a=c(1,0),data=data_fig_4a, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('M','Y'), c('A','M'), c('A','L'), c('M','L'), c('L','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
mean((tmp.dnorm$TMLE$EIF)^2)
mean((tmp.bayes$TMLE$EIF)^2)
mean((tmp$TMLE$EIF)^2)
# fig b
tmp.bayes <- ADMGtmle(a=1,data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
# fig b
tmp.bayes <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp$TMLE$estimated_psi
tmp.bayes$TMLE$estimated_psi
tmp.bayes$TMLE$estimated_psi
# fig b
tmp.bayes <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp.bayes$TMLE$ATE
tmp.bayes$Onestep$ATE
mean(tmp.bayes$TMLE$EIF^2)
mean(tmp.bayes$Onestep$EIF^2)
tmp.dnorm <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
tmp.dnorm$TMLE$ATE
tmp.dnorm$Onestep$ATE
mean(tmp.dnorm$TMLE$EIF^2)
mean(tmp.dnorm$Onestep$EIF^2)
tmp.densratio <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
tmp.densratio$TMLE$ATE
tmp.densratio$Onestep$ATE
mean(tmp.densratio$TMLE$EIF^2)
mean(tmp.densratio$Onestep$EIF^2)
result <- data.frame(method=c('Bayes','Dnorm','Densratio'),
ATE=c(tmp.bayes$TMLE$ATE,tmp.dnorm$TMLE$ATE,tmp.densratio$TMLE$ATE),
EIF2=c(mean(tmp.bayes$TMLE$EIF^2),mean(tmp.dnorm$TMLE$EIF^2),mean(tmp.densratio$TMLE$EIF^2)))
result
# fig b
graph <- make.graph(vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'),  c('A','M'), c('M','L'), c('L','Y')),
multivariate.variables = list(M=c('M1','M2')))
f.markov_pillow(graph, "L", treatment="A") # Markov pillow for M
f.markov_pillow(graph, "M", treatment="A") # Markov pillow for M
head(tmp.dnorm$TMLE.Y1$EIF.v)
plot(tmp.dnorm$TMLE.Y1$EIF.v)
mean(tmp.dnorm$TMLE$EIF)
mean(tmp.dnorm$Onestep$EIF)
result <- data.frame(method=c('Bayes','Dnorm','Densratio'),
result <- data.frame(method=c('Bayes','Dnorm','Densratio'),
ATE.tmle=c(tmp.bayes$TMLE$ATE,tmp.dnorm$TMLE$ATE,tmp.densratio$TMLE$ATE),
ATE.onestep=c(tmp.bayes$Onestep$ATE,tmp.dnorm$Onestep$ATE,tmp.densratio$Onestep$ATE),
EIF2.tmle=c(mean(tmp.bayes$TMLE$EIF^2),mean(tmp.dnorm$TMLE$EIF^2),mean(tmp.densratio$TMLE$EIF^2)),
EIF2.onestep=c(mean(tmp.bayes$Onestep$EIF^2),mean(tmp.dnorm$Onestep$EIF^2),mean(tmp.densratio$Onestep$EIF^2)))
result
tmp.dnorm$TMLE.Y1$p.a1.mpA %>% mean()
library(reticulate)
library(dplyr)
library(SuperLearner)
library(densratio)
library(itertools)
library(mvtnorm)
tmp.dnorm$TMLE.Y1$p.a1.mpA %>% mean()
tmp.dnorm$TMLE.Y1$mu.next.A %>% mean()
tmp.dnorm$Onestep.Y1$p.a1.mpA %>% mean()
tmp.dnorm$TMLE.Y1$p.a1.mpA %>% mean()
tmp.bayes$TMLE.Y1$p.a1.mpA %>% mean()
tmp.dnorm$TMLE.Y1$mu.next.A %>% mean()
tmp.bayes$TMLE.Y1$mu.next.A %>% mean()
load("/Users/apple/Library/CloudStorage/Dropbox/primal-fixability/code/Simulations/sim1-consistency/DGPs/YnotL-truth.Rdata")
ATE
VAR.ATE
devtools::document()
devtools::install()
.rs.restartR()
library(reticulate)
library(dplyr)
library(SuperLearner)
library(densratio)
library(itertools)
library(mvtnorm)
# fig b
graph <- make.graph(vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'),  c('A','M'), c('M','L'), c('L','Y')),
multivariate.variables = list(M=c('M1','M2')))
library(ADMGtmle)
# fig b
graph <- make.graph(vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'),  c('A','M'), c('M','L'), c('L','Y')),
multivariate.variables = list(M=c('M1','M2')))
f.markov_pillow(graph, "L", treatment="A") # Markov pillow for L
f.markov_pillow(graph, "M", treatment="A") # Markov pillow for M
tmp.bayes <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
multivariate.variables = list(M=c('M1','M2')))
tmp.dnorm <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
ratio.method.M = "dnorm",
ratio.method.L = "dnorm",
multivariate.variables = list(M=c('M1','M2')))
tmp.dnorm$TMLE.Y1$p.a1.mpA %>% mean()
tmp.densratio <- ADMGtmle(a=c(1,0),data=data_fig_4b, vertices=c('A','M','L','Y','X'),
bi_edges=list(c('A','L'), c('M','Y')),
di_edges=list(c('X','A'), c('X','M'), c('X','L'),c('X','Y'), c('A','M'), c('M','L'), c('L','Y'), c('A','Y')),
treatment='A', outcome='Y',
ratio.method.M = "densratio",
ratio.method.L = "densratio",
multivariate.variables = list(M=c('M1','M2')))
result <- data.frame(method=c('Bayes','Dnorm','Densratio'),
ATE.tmle=c(tmp.bayes$TMLE$ATE,tmp.dnorm$TMLE$ATE,tmp.densratio$TMLE$ATE),
ATE.onestep=c(tmp.bayes$Onestep$ATE,tmp.dnorm$Onestep$ATE,tmp.densratio$Onestep$ATE),
EIF2.tmle=c(mean(tmp.bayes$TMLE$EIF^2),mean(tmp.dnorm$TMLE$EIF^2),mean(tmp.densratio$TMLE$EIF^2)),
EIF2.onestep=c(mean(tmp.bayes$Onestep$EIF^2),mean(tmp.dnorm$Onestep$EIF^2),mean(tmp.densratio$Onestep$EIF^2)))
result
